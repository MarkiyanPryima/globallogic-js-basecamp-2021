{"version":3,"sources":["constants.js","api/utisl.js","api/userApi/index.js","components/Users/constants.js","components/Users/UsersTable/Actions/index.jsx","components/Users/UsersTable/index.jsx","common/Formik/Input/input.jsx","common/Formik/Input/select.jsx","components/Users/UserForm/FormContainer/Buttons/index.jsx","components/Users/UserForm/FormContainer/index.jsx","components/Users/UserForm/index.jsx","components/Users/UserForm/converter.js","components/Users/index.jsx","components/Not found/notFound.jsx","api/cityApi/index.js","components/Cities/constants.js","components/Cities/CityTable/Actions/index.jsx","components/Cities/CityTable/index.jsx","components/Cities/CityForm/FormContainer/Buttons/index.jsx","components/Cities/CityForm/FormContainer/index.jsx","components/Cities/CityForm/index.jsx","components/Cities/CityForm/converter.js","components/Cities/index.jsx","components/App/index.jsx","components/Root/index.jsx","index.js"],"names":["MODE","wait","ms","Promise","resolve","setTimeout","createGetId","initialId","getTimestamp","Date","getFullYear","getMonth","getDate","getHours","getMinutes","throwError","id","Error","getId","data","length","api","getUsers","console","log","getUser","user","find","u","createUser","newUser","timestamp","push","editUser","index","findIndex","deleteUser","splice","getRoles","ROLES","USERNAME","ROLE","AGE","INITIAL_STATE","Actions","url","useRouteMatch","history","useHistory","redirect","mode","className","onClick","UsersTable","users","setUsers","useEffect","userApi","then","to","map","Input","name","label","validate","type","disabled","useField","field","component","Select","value","role","Buttons","isSubmitting","useFormikContext","FormContainer","initialValues","onSubmit","roles","Number","UserForm","useParams","prevUsers","catch","err","window","alert","message","useState","setRoles","handleSubmit","values","a","payload","error","getInitialValues","Users","path","exact","NotFound","cityApi","getCities","getCity","city","c","createCity","newCity","editCity","deleteCity","getStatuses","STATUSES","NAME","STATUS","CitiesTable","cities","setCities","statuses","CityForm","prevCities","setStatuses","Cities","App","from","Root","children","basename","rootElement","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.8a11dff3.chunk.js","sourcesContent":["export const MODE = {\n  VIEW: 'view',\n  CREATE: 'create',\n  EDIT: 'edit',\n  CLONE: 'clone',\n  DELETE: 'delete'\n};\n","export const wait = (ms = 800) =>\n  new Promise(resolve => {\n    setTimeout(resolve, ms);\n  });\n\nexport const createGetId = initialId => () => ++initialId;\n\n\nexport const getTimestamp = () => `${new Date().getFullYear()} -\n${new Date().getMonth() + 1 < 10 ? '0' + (new Date().getMonth() + 1) : new Date().getDate() + 1} -\n${new Date().getDate() + 1 < 10 ? '0' + new Date().getDate() : new Date().getDate()} - \n${new Date().getHours()}:${new Date().getMinutes() + 1 < 10 ? '0' + new Date().getMinutes() : new Date().getMinutes()}`;\n\nexport const throwError = id => {\n  throw new Error(`Record with ID ${id} does not exist`);\n};\n","import { wait, createGetId, getTimestamp, throwError } from '../utisl';\nimport data from './db';\n\nconst getId = createGetId(data.length);\n\nconst api = {\n  // GET /users\n  async getUsers() {\n    await wait(1000);\n\n    console.log('GET /users', data);\n    return data;\n  },\n  // GET /users/:id\n  async getUser(id) {\n    await wait();\n\n    const user = data.find(u => u.id === id);\n\n    if (user) {\n      console.log(`GET /users/${user.id}`, user);\n      return user;\n    } else {\n      throwError(id);\n    }\n  },\n  // POST /users\n  async createUser(user) {\n    await wait();\n\n    const newUser = {\n      ...user,\n      id: getId(),\n      timestamp: getTimestamp()\n    };\n\n    data.push(newUser);\n\n    console.log('POST /users', newUser);\n    return newUser;\n  },\n  // PUT /users\n  async editUser(user) {\n    await wait();\n\n    const index = data.findIndex(u => u.id === user.id);\n\n    if (~index) {\n      data[index] = {\n        ...user,\n        timestamp: getTimestamp()\n      };\n\n      console.log('PUT /users', data[index]);\n      return data[index];\n    } else {\n      throwError(user.id);\n    }\n  },\n  // DELETE /users\n  async deleteUser(user) {\n    await wait();\n\n    const index = data.findIndex(u => u.id === user.id);\n\n    if (~index) {\n      console.log('DELETE /users', user);\n      return data.splice(index, 1);\n    } else {\n      throwError(user.id);\n    }\n  },\n  // GET /roles\n  async getRoles() {\n    await wait();\n    const ROLES = ['user', 'super-user', 'admin'];\n\n    console.log('GET /roles', ROLES);\n    return ROLES;\n  }\n};\n\nexport default api;\n","export const ID = 'id';\nexport const USERNAME = 'username';\nexport const ROLE = 'role';\nexport const TIMESTAMP = 'timestamp';\nexport const AGE = 'age';\n\nexport const INITIAL_STATE = {\n  [USERNAME]: '',\n  [ROLE]: '',\n  [AGE]: ''\n};\n","import { useRouteMatch, useHistory } from 'react-router-dom';\n\nimport { MODE } from '../../../../constants';\n\nfunction Actions({ id }) {\n  const { url } = useRouteMatch();\n  const history = useHistory();\n\n  const redirect = mode => () => {\n    history.push(`${url}/user/${mode}/${id}`);\n  };\n\n  return (\n    <div className='Actions'>\n      <button onClick={redirect(MODE.VIEW)}>View</button>\n      {' '}\n      <button onClick={redirect(MODE.EDIT)}>Edit</button>\n      {' '}\n      <button onClick={redirect(MODE.CLONE)}>Clone</button>\n      {' '}\n      <button onClick={redirect(MODE.DELETE)}>Delete</button>\n    </div>\n  );\n}\n\nexport default Actions;\n","import { useEffect } from 'react';\nimport { useRouteMatch, Link } from 'react-router-dom';\n\nimport userApi from '../../../api/userApi';\nimport { MODE } from '../../../constants';\nimport { ID, USERNAME, ROLE, TIMESTAMP, AGE } from '../constants';\nimport Actions from './Actions';\nimport './index.scss';\n\nfunction UsersTable({ users, setUsers }) {\n  const { url } = useRouteMatch();\n\n  useEffect(() => {\n    userApi.getUsers().then(setUsers);\n  }, [setUsers]);\n\n  return (\n    <div className='UsersTable'>\n      <Link to={`${url}/user/${MODE.CREATE}`}>Create User </Link>\n      <table>\n        <thead>\n        <tr>\n          <th>ID</th>\n          <th>Username</th>\n          <th>Role</th>\n          <th>Age</th>\n          <th>Last Updated At</th>\n          <th>Actions</th>\n        </tr>\n        </thead>\n        <tbody>\n        {users.map(user => (\n          <tr key={user[ID]}>\n            <td>{user[ID]}</td>\n            <td>{user[USERNAME]}</td>\n            <td>{user[ROLE]}</td>\n            <td>{user[AGE]}</td>\n            <td>{user[TIMESTAMP]}</td>\n            <td>\n              <Actions id={user[ID]} />\n            </td>\n          </tr>\n        ))}\n        </tbody>\n      </table>\n    </div>\n  );\n}\n\nexport default UsersTable;\n","import { useField, ErrorMessage } from 'formik';\nimport './styles.scss';\n\nfunction Input({ name, label, validate, type = 'text', disabled = false }) {\n  const [field] = useField({ name, validate });\n\n  return (\n    <div className='Input'>\n      <label>\n        <div>{label}</div>\n        <input type={type} disabled={disabled} {...field} />\n      </label>\n\n      <ErrorMessage name={name} className='error' component='div' />\n    </div>\n  );\n}\n\nexport default Input;\n","import { useField, ErrorMessage } from 'formik';\nimport './styles.scss';\n\nfunction Select({ name, label, value, validate, disabled = false }) {\n  const [field] = useField({ name, validate });\n  return (\n    <div className='Input'>\n      <label>\n        <div>{label}</div>\n        <select disabled={disabled} {...field}>\n          <option></option>\n          {value.map((role, index) => {\n            return <option key={index}>{role}</option>;\n          })}\n        </select>\n      </label>\n\n      <ErrorMessage name={name} className='error' component='div' />\n    </div>\n  );\n}\n\nexport default Select;","import { useHistory } from 'react-router-dom';\nimport { useFormikContext } from 'formik';\n\nimport { MODE } from '../../../../../constants';\n\nfunction Buttons({ mode }) {\n  const history = useHistory();\n  const { isSubmitting } = useFormikContext();\n\n  return (\n    <div>\n      {(mode === MODE.CREATE || mode === MODE.EDIT || mode === MODE.CLONE) && (\n        <button type='submit' disabled={isSubmitting}>\n          Save\n        </button>\n      )}\n\n      {(mode === MODE.DELETE) && (\n        <button type='submit' disabled={isSubmitting}>\n          Delete\n        </button>\n      )}\n\n      <button type='button' onClick={() => history.push('/users')}>\n        Cancel\n      </button>\n    </div>\n  );\n}\n\nexport default Buttons;\n","import { Formik, Form } from 'formik';\n\nimport Input from '../../../../common/Formik/Input/input';\nimport Select from '../../../../common/Formik/Input/select';\nimport { MODE } from '../../../../constants';\nimport { ROLE, USERNAME, AGE } from '../../constants';\nimport Buttons from './Buttons';\n\nfunction FormContainer({ initialValues, onSubmit, mode, roles }) {\n  return (\n    <Formik initialValues={initialValues} onSubmit={onSubmit}>\n      <Form>\n        <Input name={USERNAME}\n               label='Username'\n               disabled={mode === MODE.VIEW || mode === MODE.DELETE}\n               validate={value => {\n                 if (!value) return `Field is required`;\n               }} />\n\n        <Select name={ROLE}\n                label={'Role'}\n                value={roles}\n                disabled={mode === MODE.VIEW || mode === MODE.DELETE}\n                validate={value => {\n                  if (!value) return `Field is required`;\n                }} />\n\n        <Input name={AGE}\n               label='Age'\n               type={'number'}\n               disabled={mode === MODE.VIEW || mode === MODE.DELETE}\n               validate={value => {\n                 if (!value) return `Field is required`;\n                 if (Number(value) < 16 || Number(value) > 110) return `Allowed age: from 16 to 110`;\n               }}\n        />\n\n        <br />\n\n        <Buttons mode={mode} />\n      </Form>\n    </Formik>\n  );\n}\n\nexport default FormContainer;\n","import { useEffect, useState } from 'react';\nimport { useParams, useHistory } from 'react-router-dom';\n\nimport userApi from '../../../api/userApi';\nimport { MODE } from '../../../constants';\nimport { ID } from '../constants';\nimport FormContainer from './FormContainer';\nimport { getInitialValues, getRequestPayload } from './converter';\n\nfunction UserForm({ users, setUsers }) {\n  const { mode, id } = useParams();\n  const history = useHistory();\n\n  const user = users.find(user => user.id === Number(id));\n\n  useEffect(() => {\n    if (mode === MODE.VIEW || mode === MODE.EDIT) {\n      if (!user) {\n        userApi\n          .getUser(Number(id))\n          .then(user => setUsers(prevUsers => [...prevUsers, user]))\n          .catch(err => window.alert(err.message));\n      }\n    }\n  }, [id, mode, user, setUsers]);\n\n  const [roles, setRoles] = useState([]);\n  useEffect(() => {\n    userApi.getRoles().then(setRoles);\n  }, [setUsers]);\n\n  const handleSubmit = async values => {\n    try {\n      const payload = getRequestPayload(values);\n\n      switch (mode) {\n        case MODE.CREATE:\n          await userApi.createUser(payload);\n          break;\n        case MODE.EDIT:\n          await userApi.editUser(payload);\n          break;\n        case MODE.CLONE:\n          await userApi.createUser(payload);\n          break;\n        case MODE.DELETE:\n          await userApi.deleteUser(payload);\n          break;\n        default:\n          console.error(`Failed to execute this request for ${mode} mode`);\n      }\n    } catch (err) {\n      window.alert(err.message);\n    }\n\n    history.push('/users');\n  };\n\n  const initialValues = getInitialValues(user);\n\n  return (\n    <FormContainer\n      key={`${mode}:${initialValues[ID]}`}\n      initialValues={initialValues}\n      onSubmit={handleSubmit}\n      mode={mode}\n      roles={roles}\n    />\n  );\n}\n\nexport default UserForm;\n","import { INITIAL_STATE } from '../constants';\n\nexport const getInitialValues = user => (user ? user : INITIAL_STATE);\n\nexport const getRequestPayload = values => values;\n","import { useState } from 'react';\nimport { Switch, Route, useRouteMatch } from 'react-router-dom';\n\nimport { MODE } from '../../constants';\nimport UsersTable from './UsersTable';\nimport UserForm from './UserForm';\n\nfunction Users() {\n  const { path } = useRouteMatch();\n  const [users, setUsers] = useState([]);\n\n  return (\n    <div className='App'>\n      <Switch>\n        <Route exact path={path}>\n          <UsersTable users={users} setUsers={setUsers} />\n        </Route>\n\n        <Route exact\n               path={`${path}/user/:mode(${MODE.VIEW}|${MODE.CREATE}|${MODE.EDIT}|${MODE.CLONE}|${MODE.DELETE})/:id?`}>\n          <UserForm users={users} setUsers={setUsers} />\n        </Route>\n      </Switch>\n    </div>\n  );\n}\n\nexport default Users;\n","import './notFound.css';\n\nfunction NotFound() {\n  return (\n    <div className={'notFound'}>\n      <h1>Error 404</h1>\n      <h2>Not found</h2>\n    </div>\n  );\n}\n\nexport default NotFound;","import { wait, createGetId, getTimestamp, throwError } from '../utisl';\nimport data from './db';\n\nconst getId = createGetId(data.length);\n\nconst cityApi = {\n  async getCities() {\n    await wait(1000);\n\n    console.log('GET /cities', data);\n    return data;\n  },\n  async getCity(id) {\n    await wait();\n\n    const city = data.find(c => c.id === id);\n\n    if (city) {\n      console.log(`GET /cities/${city.id}`, city);\n      return city;\n    } else {\n      throwError(id);\n    }\n  },\n  async createCity(city) {\n    await wait();\n\n    const newCity = {\n      ...city,\n      id: getId(),\n      timestamp: getTimestamp()\n    };\n\n    data.push(newCity);\n\n    console.log('POST /cities', newCity);\n    return newCity;\n  },\n  async editCity(city) {\n    await wait();\n\n    const index = data.findIndex(c => c.id === city.id);\n\n    if (~index) {\n      data[index] = {\n        ...city,\n        timestamp: getTimestamp()\n      };\n\n      console.log('PUT /cities', data[index]);\n      return data[index];\n    } else {\n      throwError(city.id);\n    }\n  },\n\n  async deleteCity(city) {\n    await wait();\n\n    const index = data.findIndex(c => c.id === city.id);\n\n    if (~index) {\n      console.log('DELETE /cities', city);\n      return data.splice(index, 1);\n    } else {\n      throwError(city.id);\n    }\n  },\n\n  async getStatuses() {\n    await wait();\n    const STATUSES = ['city', 'capital', 'village'];\n\n    console.log('GET /statuses', STATUSES);\n    return STATUSES;\n  }\n};\n\nexport default cityApi;\n","export const ID = 'id';\nexport const NAME = 'name';\nexport const STATUS = 'status';\nexport const TIMESTAMP = 'timestamp';\nexport const AGE = 'age';\n\nexport const INITIAL_STATE = {\n  [NAME]: '',\n  [STATUS]: '',\n  [AGE]: ''\n};\n","import { useRouteMatch, useHistory } from 'react-router-dom';\n\nimport { MODE } from '../../../../constants';\n\nfunction Actions({ id }) {\n  const { url } = useRouteMatch();\n  const history = useHistory();\n\n  const redirect = mode => () => {\n    history.push(`${url}/city/${mode}/${id}`);\n  };\n\n  return (\n    <div className='Actions'>\n      <button onClick={redirect(MODE.VIEW)}>View</button>\n      {' '}\n      <button onClick={redirect(MODE.EDIT)}>Edit</button>\n      {' '}\n      <button onClick={redirect(MODE.CLONE)}>Clone</button>\n      {' '}\n      <button onClick={redirect(MODE.DELETE)}>Delete</button>\n    </div>\n  );\n}\n\nexport default Actions;\n","import { useEffect } from 'react';\nimport { useRouteMatch, Link } from 'react-router-dom';\n\nimport cityApi from '../../../api/cityApi';\nimport { MODE } from '../../../constants';\nimport { ID, NAME, STATUS, TIMESTAMP, AGE } from '../constants';\nimport Actions from './Actions';\nimport './index.scss';\n\nfunction CitiesTable({ cities, setCities }) {\n  const { url } = useRouteMatch();\n\n  useEffect(() => {\n    cityApi.getCities().then(setCities);\n  }, [setCities]);\n\n  return (\n    <div className='CitiesTable'>\n      <Link to={`${url}/city/${MODE.CREATE}`}>Create City </Link>\n      <table>\n        <thead>\n        <tr>\n          <th>ID</th>\n          <th>Name</th>\n          <th>Status</th>\n          <th>Age</th>\n          <th>Last Updated At</th>\n          <th>Actions</th>\n        </tr>\n        </thead>\n        <tbody>\n        {cities.map(user => (\n          <tr key={user[ID]}>\n            <td>{user[ID]}</td>\n            <td>{user[NAME]}</td>\n            <td>{user[STATUS]}</td>\n            <td>{user[AGE]}</td>\n            <td>{user[TIMESTAMP]}</td>\n            <td>\n              <Actions id={user[ID]} />\n            </td>\n          </tr>\n        ))}\n        </tbody>\n      </table>\n    </div>\n  );\n}\n\nexport default CitiesTable;\n","import { useHistory } from 'react-router-dom';\nimport { useFormikContext } from 'formik';\n\nimport { MODE } from '../../../../../constants';\n\nfunction Buttons({ mode }) {\n  const history = useHistory();\n  const { isSubmitting } = useFormikContext();\n\n  return (\n    <div>\n      {(mode === MODE.CREATE || mode === MODE.EDIT || mode === MODE.CLONE) && (\n        <button type='submit' disabled={isSubmitting}>\n          Save\n        </button>\n      )}\n\n      {(mode === MODE.DELETE) && (\n        <button type='submit' disabled={isSubmitting}>\n          Delete\n        </button>\n      )}\n\n      <button type='button' onClick={() => history.push('/cities')}>\n        Cancel\n      </button>\n    </div>\n  );\n}\n\nexport default Buttons;\n","import { Formik, Form } from 'formik';\n\nimport Input from '../../../../common/Formik/Input/input';\nimport Select from '../../../../common/Formik/Input/select';\nimport { MODE } from '../../../../constants';\nimport { STATUS, NAME, AGE } from '../../constants';\nimport Buttons from './Buttons';\n\nfunction FormContainer({ initialValues, onSubmit, mode, statuses }) {\n  return (\n    <Formik initialValues={initialValues} onSubmit={onSubmit}>\n      <Form>\n        <Input name={NAME}\n               label='Name'\n               disabled={mode === MODE.VIEW || mode === MODE.DELETE}\n               validate={value => {\n                 if (!value) return `Field is required`;\n               }} />\n\n        <Select name={STATUS}\n                label={'Status'}\n                value={statuses}\n                disabled={mode === MODE.VIEW || mode === MODE.DELETE}\n                validate={value => {\n                  if (!value) return `Field is required`;\n                }} />\n\n        <Input name={AGE}\n               label='Age'\n               type={'number'}\n               disabled={mode === MODE.VIEW || mode === MODE.DELETE}\n               validate={value => {\n                 if (!value) return `Field is required`;\n                 if (Number(value) < 0) return `Age can't be less than 0`;\n               }}\n        />\n\n        <br />\n\n        <Buttons mode={mode} />\n      </Form>\n    </Formik>\n  );\n}\n\nexport default FormContainer;\n","import { useEffect, useState } from 'react';\nimport { useParams, useHistory } from 'react-router-dom';\n\nimport cityApi from '../../../api/cityApi';\nimport { MODE } from '../../../constants';\nimport { ID } from '../constants';\nimport FormContainer from './FormContainer';\nimport { getInitialValues, getRequestPayload } from './converter';\n\nfunction CityForm({ cities, setCities }) {\n  const { mode, id } = useParams();\n  const history = useHistory();\n\n  const city = cities.find(city => city.id === Number(id));\n\n  useEffect(() => {\n    if (mode === MODE.VIEW || mode === MODE.EDIT) {\n      if (!city) {\n        cityApi\n          .getCity(Number(id))\n          .then(city => setCities(prevCities => [...prevCities, city]))\n          .catch(err => window.alert(err.message));\n      }\n    }\n  }, [id, mode, city, setCities]);\n\n  const [statuses, setStatuses] = useState([]);\n  useEffect(() => {\n    cityApi.getStatuses().then(setStatuses);\n  }, [setStatuses]);\n\n  const handleSubmit = async values => {\n    try {\n      const payload = getRequestPayload(values);\n\n      switch (mode) {\n        case MODE.CREATE:\n          await cityApi.createCity(payload);\n          break;\n        case MODE.EDIT:\n          await cityApi.createCity(payload);\n          break;\n        case MODE.CLONE:\n          await cityApi.createCity(payload);\n          break;\n        case MODE.DELETE:\n          await cityApi.deleteCity(payload);\n          break;\n        default:\n          console.error(`Failed to execute this request for ${mode} mode`);\n      }\n    } catch (err) {\n      window.alert(err.message);\n    }\n\n    history.push('/cities');\n  };\n\n  const initialValues = getInitialValues(city);\n\n  return (\n\n    <FormContainer\n      key={`${mode}:${initialValues[ID]}`}\n      initialValues={initialValues}\n      onSubmit={handleSubmit}\n      mode={mode}\n      statuses={statuses}\n    />\n  );\n}\n\nexport default CityForm;\n","import { INITIAL_STATE } from '../constants';\n\nexport const getInitialValues = user => (user ? user : INITIAL_STATE);\n\nexport const getRequestPayload = values => values;\n","import { useState } from 'react';\nimport { Switch, Route, useRouteMatch } from 'react-router-dom';\n\nimport { MODE } from '../../constants';\nimport CitiesTable from './CityTable';\nimport CityForm from './CityForm';\n\nfunction Cities() {\n  const { path } = useRouteMatch();\n  const [cities, setCities] = useState([]);\n\n  return (\n    <div className='App'>\n      <Switch>\n        <Route exact path={path}>\n          <CitiesTable cities={cities} setCities={setCities} />\n        </Route>\n\n        <Route exact\n               path={`${path}/city/:mode(${MODE.VIEW}|${MODE.CREATE}|${MODE.EDIT}|${MODE.CLONE}|${MODE.DELETE})/:id?`}>\n          <CityForm cities={cities} setCities={setCities} />\n        </Route>\n      </Switch>\n    </div>\n  );\n}\n\nexport default Cities;\n","import { Switch, Redirect, Route, Link } from 'react-router-dom';\n\nimport Users from '../Users';\nimport NotFound from '../Not found/notFound';\nimport './app.css';\nimport Cities from '../Cities';\n\nfunction App() {\n  return (\n    <div className='App'>\n      <div className={'bar'}>\n\n        <ul>\n          <li><Link to='/users'>Users</Link></li>\n          <li><Link to='/cities'>Cities</Link></li>\n        </ul>\n      </div>\n\n      <Switch>\n        <Redirect exact from='/' to='/users' />\n\n        <Route path='/users'>\n          <Users />\n        </Route>\n\n        <Route path='/cities'>\n          <Cities />\n        </Route>\n\n        <NotFound />\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","import { BrowserRouter as Router } from 'react-router-dom';\n\nfunction Root({ children }) {\n  return (\n    <Router basename=\"/globallogic-js-basecamp-2021/react/03-react-router-formik/build\">\n      {children}\n    </Router>\n  );\n}\n\nexport default Root;\n","import { StrictMode } from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './components/App';\nimport Root from './components/Root';\nimport './styles.css';\n\nconst rootElement = document.getElementById('root');\nReactDOM.render(\n  <StrictMode>\n    <Root>\n      <App />\n    </Root>\n  </StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}