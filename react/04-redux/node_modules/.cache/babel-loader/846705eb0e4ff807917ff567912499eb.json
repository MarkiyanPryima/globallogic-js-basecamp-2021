{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nlet initialState = [];\nconst todoReducer = createSlice({\n  name: 'todo',\n  initialState,\n  reducers: {\n    addTodos: (state, action) => {\n      state.push(action.payload);\n      return state;\n    },\n    completeTodos: (state, action) => {\n      // return state.map((todo) => {\n      //     if (todo.id === action.payload) {\n      //         return {\n      //             ...todo,\n      //             completed: true,\n      //         };\n      //     }\n      //     return todo;\n      // });\n      const todo = state.todos.find(todo => todo.id === action.payload);\n      todo.completed = !todo.completed;\n    },\n    deleteTodos: (state, action) => {\n      return state.filter(todo => todo.id !== action.payload);\n    }\n  }\n});\nexport const {\n  addTodos,\n  deleteTodos,\n  completeTodos\n} = todoReducer.actions;\nexport const reducerTodo = todoReducer.reducer;","map":{"version":3,"sources":["/Users/markiyanpryima/Desktop/globallogic-js-basecamp-2021/react/04-redux/src/components/Redux/reducerTodo.js"],"names":["createSlice","initialState","todoReducer","name","reducers","addTodos","state","action","push","payload","completeTodos","todo","todos","find","id","completed","deleteTodos","filter","actions","reducerTodo","reducer"],"mappings":"AAAA,SAAQA,WAAR,QAA0B,kBAA1B;AAEA,IAAIC,YAAY,GAAG,EAAnB;AAEA,MAAMC,WAAW,GAAGF,WAAW,CAAC;AAC5BG,EAAAA,IAAI,EAAE,MADsB;AAE5BF,EAAAA,YAF4B;AAG5BG,EAAAA,QAAQ,EAAE;AACNC,IAAAA,QAAQ,EAAE,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACzBD,MAAAA,KAAK,CAACE,IAAN,CAAWD,MAAM,CAACE,OAAlB;AACA,aAAOH,KAAP;AACH,KAJK;AAKNI,IAAAA,aAAa,EAAE,CAACJ,KAAD,EAAQC,MAAR,KAAmB;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAMI,IAAI,GAAGL,KAAK,CAACM,KAAN,CAAYC,IAAZ,CAAiBF,IAAI,IAAIA,IAAI,CAACG,EAAL,KAAYP,MAAM,CAACE,OAA5C,CAAb;AACAE,MAAAA,IAAI,CAACI,SAAL,GAAiB,CAACJ,IAAI,CAACI,SAAvB;AACH,KAjBK;AAkBNC,IAAAA,WAAW,EAAE,CAACV,KAAD,EAAQC,MAAR,KAAmB;AAC5B,aAAOD,KAAK,CAACW,MAAN,CAAaN,IAAI,IAAIA,IAAI,CAACG,EAAL,KAAYP,MAAM,CAACE,OAAxC,CAAP;AACH;AApBK;AAHkB,CAAD,CAA/B;AA2BA,OAAO,MAAM;AAACJ,EAAAA,QAAD;AAAWW,EAAAA,WAAX;AAAwBN,EAAAA;AAAxB,IAAyCR,WAAW,CAACgB,OAA3D;AACP,OAAO,MAAMC,WAAW,GAAGjB,WAAW,CAACkB,OAAhC","sourcesContent":["import {createSlice} from '@reduxjs/toolkit';\n\nlet initialState = [];\n\nconst todoReducer = createSlice({\n    name: 'todo',\n    initialState,\n    reducers: {\n        addTodos: (state, action) => {\n            state.push(action.payload);\n            return state;\n        },\n        completeTodos: (state, action) => {\n            // return state.map((todo) => {\n            //     if (todo.id === action.payload) {\n            //         return {\n            //             ...todo,\n            //             completed: true,\n            //         };\n            //     }\n            //     return todo;\n            // });\n            const todo = state.todos.find(todo => todo.id === action.payload);\n            todo.completed = !todo.completed;\n        },\n        deleteTodos: (state, action) => {\n            return state.filter(todo => todo.id !== action.payload)\n        }\n    }\n});\n\nexport const {addTodos, deleteTodos, completeTodos} = todoReducer.actions;\nexport const reducerTodo = todoReducer.reducer;"]},"metadata":{},"sourceType":"module"}