{"ast":null,"code":"const reducer = (state, action) => {\n  const {\n    todoList\n  } = state;\n  const {\n    type,\n    payload\n  } = action;\n\n  switch (type) {\n    case 'setTitle':\n      {\n        return { ...state,\n          title: payload\n        };\n      }\n\n    case 'addTodo':\n      {\n        return {\n          title: '',\n          todoList: [...todoList, payload]\n        };\n      }\n\n    case 'toggleTodo':\n      return { ...state,\n        todoList: todoList.map(todo => todo.id === payload ? { ...todo,\n          isCompleted: !todo.isCompleted\n        } : todo)\n      };\n\n    case 'deleteTodo':\n      return { ...state,\n        todoList: todoList.filter(todo => todo.id !== payload)\n      };\n\n    default:\n      throw new Error(`Type \"${type}\" is not defined`);\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/Users/markiyanpryima/Desktop/globallogic-js-basecamp-2021/react/04-redux/src/components/TodoList/reducer.js"],"names":["reducer","state","action","todoList","type","payload","title","map","todo","id","isCompleted","filter","Error"],"mappings":"AAAA,MAAMA,OAAO,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACjC,QAAM;AAAEC,IAAAA;AAAF,MAAeF,KAArB;AACA,QAAM;AAAEG,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAoBH,MAA1B;;AAEA,UAAQE,IAAR;AACE,SAAK,UAAL;AAAiB;AACf,eAAO,EACL,GAAGH,KADE;AAELK,UAAAA,KAAK,EAAED;AAFF,SAAP;AAID;;AACD,SAAK,SAAL;AAAgB;AACd,eAAO;AACLC,UAAAA,KAAK,EAAE,EADF;AAELH,UAAAA,QAAQ,EAAE,CAAC,GAAGA,QAAJ,EAAcE,OAAd;AAFL,SAAP;AAID;;AACD,SAAK,YAAL;AACE,aAAO,EACL,GAAGJ,KADE;AAELE,QAAAA,QAAQ,EAAEA,QAAQ,CAACI,GAAT,CAAaC,IAAI,IACzBA,IAAI,CAACC,EAAL,KAAYJ,OAAZ,GAAsB,EAAE,GAAGG,IAAL;AAAWE,UAAAA,WAAW,EAAE,CAACF,IAAI,CAACE;AAA9B,SAAtB,GAAoEF,IAD5D;AAFL,OAAP;;AAMF,SAAK,YAAL;AACE,aAAO,EACL,GAAGP,KADE;AAELE,QAAAA,QAAQ,EAAEA,QAAQ,CAACQ,MAAT,CAAgBH,IAAI,IAAIA,IAAI,CAACC,EAAL,KAAYJ,OAApC;AAFL,OAAP;;AAIF;AACE,YAAM,IAAIO,KAAJ,CAAW,SAAQR,IAAK,kBAAxB,CAAN;AA1BJ;AA4BD,CAhCD;;AAkCA,eAAeJ,OAAf","sourcesContent":["const reducer = (state, action) => {\n  const { todoList } = state;\n  const { type, payload } = action;\n\n  switch (type) {\n    case 'setTitle': {\n      return {\n        ...state,\n        title: payload,\n      };\n    }\n    case 'addTodo': {\n      return {\n        title: '',\n        todoList: [...todoList, payload],\n      };\n    }\n    case 'toggleTodo':\n      return {\n        ...state,\n        todoList: todoList.map(todo =>\n          todo.id === payload ? { ...todo, isCompleted: !todo.isCompleted } : todo\n        ),\n      };\n    case 'deleteTodo':\n      return {\n        ...state,\n        todoList: todoList.filter(todo => todo.id !== payload),\n      };\n    default:\n      throw new Error(`Type \"${type}\" is not defined`);\n  }\n};\n\nexport default reducer;\n"]},"metadata":{},"sourceType":"module"}