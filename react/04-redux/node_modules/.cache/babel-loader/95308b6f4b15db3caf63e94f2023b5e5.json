{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nlet initialState = [];\nconst todoReducer = createSlice({\n  name: 'todo',\n  initialState,\n  reducers: {\n    addTodos: (state, action) => {\n      state.push(action.payload);\n      return state;\n    },\n    completeTodos: (state, action) => {\n      const todo = state.filter(todo => todo.id === action.payload);\n      todo.completed = !todo.completed;\n    },\n    deleteTodos: (state, action) => {\n      return state.filter(todo => todo.id !== action.payload);\n    }\n  }\n});\nexport const {\n  addTodos,\n  deleteTodos,\n  completeTodos\n} = todoReducer.actions;\nexport const reducerTodo = todoReducer.reducer;","map":{"version":3,"sources":["/Users/markiyanpryima/Desktop/globallogic-js-basecamp-2021/react/04-redux/src/components/Redux/reducerTodo.js"],"names":["createSlice","initialState","todoReducer","name","reducers","addTodos","state","action","push","payload","completeTodos","todo","filter","id","completed","deleteTodos","actions","reducerTodo","reducer"],"mappings":"AAAA,SAAQA,WAAR,QAA0B,kBAA1B;AAEA,IAAIC,YAAY,GAAG,EAAnB;AAEA,MAAMC,WAAW,GAAGF,WAAW,CAAC;AAC5BG,EAAAA,IAAI,EAAE,MADsB;AAE5BF,EAAAA,YAF4B;AAG5BG,EAAAA,QAAQ,EAAE;AACNC,IAAAA,QAAQ,EAAE,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACzBD,MAAAA,KAAK,CAACE,IAAN,CAAWD,MAAM,CAACE,OAAlB;AACA,aAAOH,KAAP;AACH,KAJK;AAKNI,IAAAA,aAAa,EAAE,CAACJ,KAAD,EAAQC,MAAR,KAAmB;AAC9B,YAAMI,IAAI,GAAGL,KAAK,CAACM,MAAN,CAAaD,IAAI,IAAIA,IAAI,CAACE,EAAL,KAAYN,MAAM,CAACE,OAAxC,CAAb;AACAE,MAAAA,IAAI,CAACG,SAAL,GAAiB,CAACH,IAAI,CAACG,SAAvB;AACH,KARK;AASNC,IAAAA,WAAW,EAAE,CAACT,KAAD,EAAQC,MAAR,KAAmB;AAC5B,aAAOD,KAAK,CAACM,MAAN,CAAaD,IAAI,IAAIA,IAAI,CAACE,EAAL,KAAYN,MAAM,CAACE,OAAxC,CAAP;AACH;AAXK;AAHkB,CAAD,CAA/B;AAkBA,OAAO,MAAM;AAACJ,EAAAA,QAAD;AAAWU,EAAAA,WAAX;AAAwBL,EAAAA;AAAxB,IAAyCR,WAAW,CAACc,OAA3D;AACP,OAAO,MAAMC,WAAW,GAAGf,WAAW,CAACgB,OAAhC","sourcesContent":["import {createSlice} from '@reduxjs/toolkit';\n\nlet initialState = [];\n\nconst todoReducer = createSlice({\n    name: 'todo',\n    initialState,\n    reducers: {\n        addTodos: (state, action) => {\n            state.push(action.payload);\n            return state;\n        },\n        completeTodos: (state, action) => {\n            const todo = state.filter(todo => todo.id === action.payload);\n            todo.completed = !todo.completed;\n        },\n        deleteTodos: (state, action) => {\n            return state.filter(todo => todo.id !== action.payload)\n        }\n    }\n});\n\nexport const {addTodos, deleteTodos, completeTodos} = todoReducer.actions;\nexport const reducerTodo = todoReducer.reducer;"]},"metadata":{},"sourceType":"module"}