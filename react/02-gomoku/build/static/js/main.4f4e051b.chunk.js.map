{"version":3,"sources":["Square.js","Board.js","calculateWinner.js","Game.js","reportWebVitals.js","index.js"],"names":["Square","props","status","highlight","className","onClick","value","Board","renderSquare","i","squares","winLine","includes","row","j","push","calculateWinner","currentMove","counterHorizontal","combinationHorizontal","length","winner","draw","combination","counterVertical","combinationVertical","counterSideDiagonal","combinationSideDiagonal","counterMainDiagonal","combinationMainDiagonal","Game","useState","Array","fill","lastMove","history","setHistory","stepNumber","setStepNumber","increasingOrder","setIncreasingOrder","moves","slice","current","progress","map","step","move","Math","floor","col","desc","jumpTo","reverse","cells","concat","handleClick","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4f4e051b.chunk.js","sourcesContent":["export default function Square(props) {\n    const status = props.highlight ? 'winner' : 'square';\n    return (\n        <button className={status} onClick={props.onClick}>\n            {props.value}\n        </button>\n    );\n}","import Square from \"./Square\";\n\nexport default function Board(props) {\n\n    const renderSquare = (i) => {\n        return <Square key={i} value={props.squares[i]}\n                       onClick={() => props.onClick(i)}\n                       highlight={props.winLine && props.winLine.includes(i)}/>;\n    }\n\n    const size = 19;\n    let squares = [];\n    for (let i = 0; i < size; ++i) {\n        let row = [];\n        for (let j = 0; j < size; ++j) {\n            row.push(renderSquare(i * size + j));\n        }\n        squares.push(<div key={i} className=\"board-row\">{row}</div>);\n    }\n\n    return (\n        <div>{squares}</div>\n    );\n}\n","export default function calculateWinner(squares, currentMove) {\n\n    let counterHorizontal = 1;\n    let combinationHorizontal = [currentMove];\n\n    for (let i = currentMove - 1; i >= currentMove - 4; i--) {\n\n        if (i < 0) break;\n        if (squares[i] === null || squares[i] !== squares[currentMove]) break;\n        if ((i - 18) % 19 === 0) break;\n\n        if (squares[currentMove] === squares[i]) {\n\n            counterHorizontal++;\n            combinationHorizontal.push(i);\n\n        }\n    }\n\n    for (let i = currentMove + 1; i <= currentMove + 4; i++) {\n\n        if (i > squares.length) break;\n        if (squares[i] === null) break;\n        if (i === 0 || (i - 19) % 19 === 0 || squares[i] !== squares[currentMove]) break;\n\n        if (squares[currentMove] === squares[i]) {\n\n            counterHorizontal++;\n            combinationHorizontal.push(i);\n\n        }\n    }\n\n    if (counterHorizontal >= 5) {\n        return {\n            winner: squares[currentMove],\n            draw: false,\n            combination: combinationHorizontal\n        };\n    }\n\n\n    let counterVertical = 1;\n    let combinationVertical = [currentMove];\n\n    for (let i = currentMove - 19; i >= currentMove - 76; i -= 19) {\n\n        if (i < 0) break;\n        if (squares[i] === null || squares[i] !== squares[currentMove]) break;\n\n        if (squares[currentMove] === squares[i]) {\n\n            counterVertical++;\n            combinationVertical.push(i);\n\n        }\n    }\n\n    for (let i = currentMove + 19; i <= currentMove + 76; i += 19) {\n\n        if (i > squares.length) break;\n        if (squares[i] === null || squares[i] !== squares[currentMove]) break;\n\n        if (squares[currentMove] === squares[i]) {\n\n            counterVertical++;\n            combinationVertical.push(i);\n\n        }\n    }\n\n    if (counterVertical >= 5) {\n        return {\n            winner: squares[currentMove],\n            draw: false,\n            combination: combinationVertical\n        };\n    }\n\n    let counterSideDiagonal = 1;\n    let combinationSideDiagonal = [currentMove];\n\n\n    for (let i = currentMove - 18; i >= currentMove - 72; i -= 18) {\n\n        if (i < 0) break;\n        if (squares[i] === null || squares[i] !== squares[currentMove]) break;\n        if (i === 0 || (i - 19) % 19 === 0) break;\n\n        if (squares[currentMove] === squares[i]) {\n\n            counterSideDiagonal++;\n            combinationSideDiagonal.push(i);\n\n        }\n    }\n\n    for (let i = currentMove + 18; i <= currentMove + 72; i += 18) {\n\n        if (i > squares.length) break;\n        if (squares[i] === null || squares[i] !== squares[currentMove]) break;\n        if ((i - 18) % 19 === 0) break;\n\n        if (squares[currentMove] === squares[i]) {\n\n            counterSideDiagonal++;\n            combinationSideDiagonal.push(i);\n\n        }\n    }\n\n    if (counterSideDiagonal >= 5) {\n        return {\n            winner: squares[currentMove],\n            draw: false,\n            combination: combinationSideDiagonal\n        };\n    }\n\n    let counterMainDiagonal = 1;\n    let combinationMainDiagonal = [currentMove];\n\n    for (let i = currentMove - 20; i >= currentMove - 80; i -= 20) {\n\n        if (i < 0) break;\n        if (squares[i] === null || squares[i] !== squares[currentMove]) break;\n        if ((i - 18) % 19 === 0) break;\n\n        if (squares[currentMove] === squares[i]) {\n\n            counterMainDiagonal++;\n            combinationMainDiagonal.push(i);\n\n        }\n    }\n\n    for (let i = currentMove + 20; i <= currentMove + 80; i += 20) {\n\n        if (i > squares.length) break;\n        if (squares[i] === null || squares[i] !== squares[currentMove]) break;\n        if (i === 0 || (i - 19) % 19 === 0) break;\n\n        if (squares[currentMove] === squares[i]) {\n\n            counterMainDiagonal++;\n            combinationMainDiagonal.push(i);\n\n        }\n    }\n\n    if (counterMainDiagonal >= 5) {\n        return {\n            winner: squares[currentMove],\n            draw: false,\n            combination: combinationMainDiagonal\n        };\n    }\n\n    let draw = true;\n\n    for (let i = 0; i < squares.length; i++) {\n        if (squares[i] === null) {\n            draw = false;\n            break;\n        }\n    }\n\n    return {\n        winner: null,\n        draw: draw,\n        combination: null\n    };\n\n}\n","import './Game.css';\nimport React, {useState} from \"react\";\nimport Board from \"./Board\";\nimport calculateWinner from \"./calculateWinner\";\n\nexport default function Game() {\n\n    const [history, setHistory] = useState([{squares: Array(361).fill(null), lastMove: null}]);\n\n    const [stepNumber, setStepNumber] = useState(0);\n    const [increasingOrder, setIncreasingOrder] = useState(true);\n\n    const moves = history.slice(0, stepNumber + 1);\n    const current = moves[stepNumber];\n\n    const winner = calculateWinner(current.squares, moves[moves.length - 1].lastMove);\n    let status;\n\n    if (winner.winner) {\n        status = `Winner: ${winner.winner}`\n    } else if (winner.draw) {\n        status = `It's a Draw`;\n    } else {\n        status = `Next player: ${stepNumber % 2 === 0 ? '🟢' : '🔴'}`\n    }\n\n    const progress = moves.map((step, move) => {\n\n        const row = 1 + Math.floor(step.lastMove / 19);\n        const col = 1 + step.lastMove % 19;\n\n        const desc = move ?\n            `Go to move #${move} (${row}, ${col})` :\n            'Go to game start';\n        return (\n            <li key={move}>\n                <button className={move === stepNumber ? 'selectedItem' : ''}\n                        onClick={() => jumpTo(move)}>{desc}</button>\n            </li>\n        );\n    });\n\n    if (!increasingOrder) {\n        progress.reverse();\n    }\n\n    const handleClick = (i) => {\n        const cells = current.squares.slice();\n\n        if (calculateWinner(cells, moves[moves.length - 1].lastMove).winner || cells[i]) {\n            return;\n        }\n\n        cells[i] = (stepNumber % 2 === 0) ? '🟢' : '🔴';\n\n        setHistory(moves.concat([{squares: cells, lastMove: i}]));\n        setStepNumber(moves.length);\n    }\n\n    const jumpTo = (step) => {\n        setStepNumber(step);\n    }\n\n    return (\n        <div className=\"game\">\n            <div className=\"game-board\">\n                <Board squares={current.squares} onClick={(i) => handleClick(i)} winLine={winner.combination}/>\n            </div>\n            <div className=\"game-info\">\n                <div>{status}</div>\n                <button onClick={() => setIncreasingOrder(!increasingOrder)}>\n                    {increasingOrder ? 'Increasing order' : 'Decreasing order'}\n                </button>\n                <ul>{progress}</ul>\n            </div>\n        </div>\n    );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Game from './Game';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Game />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}